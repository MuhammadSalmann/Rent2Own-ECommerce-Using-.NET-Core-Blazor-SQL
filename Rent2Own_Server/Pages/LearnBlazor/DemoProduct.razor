@page "/learnBlazor/demoproduct"

<h2 class="text-primary">DemoProduct</h2>
<div class="border p-2 mt-2" style="background-color:azure">
    <button class="btn btn-success mt-5 mb-5" @onclick="()=>ChildComp.SuccessToastr()">Click Ref Button</button>
    <p>Favorite Counter: @count</p>
    <p>Selected Name: @ProductName</p>
    <div class="row">
        @foreach(var prod in Products)
        {
            <div class="col-6" @onclick=" (args)=>
                selectedProduct(args,prod.Name)" >

                Favourite: <input type="checkbox" @onchange="favoritecounter" /> <br />
               <h4>Product ID: @prod.Id</h4>
               Name: @prod.Name <br/>
               Show Propeties:
                <input type="checkbox" @bind-value="prod.IsActive" checked="@(prod.IsActive?"checked":null)" />
                @if (prod.IsActive)
                {
                    foreach(var p in prod.ProductProperties)
                    {
                        <p>@p.Key = @p.Value</p>
                    }
                }
                <br />
                <DeleteUpdateButton @ref="ChildComp" check="prod.IsActive">
                    <content>This is Fragment(Anything between Componentes)</content>
                </DeleteUpdateButton>
                <br/>
                
        </div>
        }
    </div>
</div>

@code {
    private DeleteUpdateButton ChildComp;
    List<Demo_Product> Products = new();
    private int count { get; set; } = 0;
    private string ProductName{ get; set; }
    protected override void OnInitialized()
    {
        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,

                Price=10.99,
                ProductProperties = new()
                {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
                     new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz"},
                    new Demo_ProductProp { Id = 3, Key = "Color", Value="Purple" }
                }
            });

        Products.Add(new()
        {
            Id = 2,
            Name = "Blossom Lily",
            IsActive = false,
            Price=13.99,
            ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
            }
        });
    }
    public void favoritecounter(Microsoft.AspNetCore.Components.ChangeEventArgs e) 
    {
        @if((bool)e.Value)
        {
            count++;
        } else
        {
            count--;
        }
    }
    public void selectedProduct(MouseEventArgs e, string name)
    {
        ProductName = name;
    }
}
